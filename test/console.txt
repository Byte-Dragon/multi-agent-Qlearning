根据距离来确立连接关系：{'agent-0': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 25], 'agent-1': [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 27], 'agent-2': [20, 21, 22, 23, 24, 28, 29]}
连接关系矩阵：
[[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 1. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1.
  1. 0. 0. 0. 1. 1.]]
距离值矩阵：
[[0.0833359  0.12642132 0.42887622 0.34428358 0.11465629 0.59486623
  0.12938822 0.21030919 0.12805799 0.46429404 0.         0.
  0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.         0.43254277 0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.2266839  0.56600064
  0.53928836 0.54364046 0.53015183 0.34645985 0.69923834 0.14800764
  0.53940328 0.52394332 0.         0.         0.         0.
  0.         0.         0.32097873 0.2824234  0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.         0.         0.28500522 0.27415434 0.27296259 0.3990696
  0.25762302 0.         0.         0.         0.3912705  0.35786249]]
根据信号强度连接关系：{'agent-0': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 25], 'agent-1': [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 27], 'agent-2': [20, 21, 22, 23, 24, 28, 29]}
连接关系矩阵：
[[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 1. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1.
  1. 0. 0. 0. 1. 1.]]
距离值矩阵：
[[49.23254283 45.62616633 35.03288334 36.93949693 46.47204435 32.19305926
  45.42524784 41.21511767 45.51475676 34.34418688  0.          0.
   0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.
   0.         34.9590001   0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.         40.53466317 32.61367925
  33.03276591 32.96309251 33.18087742 36.86609042 30.78068634 44.20585017
  33.030919   33.28298372  0.          0.          0.          0.
   0.          0.         37.52732091 38.63446676  0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.
   0.          0.          0.          0.          0.          0.
   0.          0.         38.5303887  38.86446927 38.90194814 35.62590204
  39.39916892  0.          0.          0.         35.7964477  36.56734239]]



  set_action:######################################
policy.action(obs_n[0]): [0. 0. 1. 0. 0. 1. 0. 0. 0.]
policy.action(obs_n[1]): [0. 0. 1. 0. 0. 1. 0. 0. 0.]
policy.action(obs_n[2]): [0. 1. 0. 0. 0. 1. 0. 0. 0.]
policy.action(obs_n[3]): [0. 0. 1. 0. 0. 1. 0. 0. 0.]
policy.action(obs_n[4]): [0. 0. 0. 1. 0. 1. 0. 0. 0.]
policy.action(obs_n[5]): [0. 0. 0. 0. 1. 1. 0. 0. 0.]
action_n: [array([0., 0., 0., 0., 1., 1., 0., 0., 0.]), array([0., 0., 0., 0., 1., 1., 0., 0., 0.]), array([0., 0., 0., 0., 1., 1., 0., 0., 0.]), array([0., 0., 1., 0., 0., 1., 0., 0., 0.]), array([0., 1., 0., 0., 0., 1., 0., 0., 0.]), array([0., 1., 0., 0., 0., 1., 0., 0., 0.])]
action: [0. 0. 0. 0. 1. 1. 0. 0. 0.], agent: agent 0, action_space: MultiDiscrete2
Multidiscrete---------action: [array([0., 0., 0., 0., 1.]), array([1., 0., 0., 0.])], action[0]: [0. 0. 0. 0. 1.]
movable else---------action: [array([0., 0., 0., 0., 1.]), array([1., 0., 0., 0.])], action of agent: [ 0. -1.]
movable---------action: [array([1., 0., 0., 0.])], actionofagent: [ 0. -3.]
communication---------action[0]: [1. 0. 0. 0.]
communication---------action: [], action of agent: [1. 0. 0. 0.]

policy.action(obs_n[0]): [0. 0. 1. 0. 0. 1. 0.]
policy.action(obs_n[1]): [0. 1. 0. 0. 0. 1. 0.]
policy.action(obs_n[2]): [0. 0. 0. 1. 0. 1. 0.]
action_n: [array([0., 0., 1., 0., 0., 1., 0.]), array([0., 1., 0., 0., 0., 1., 0.]), array([0., 0., 1., 0., 0., 1., 0.])]
action: [0. 0. 1. 0. 0. 1. 0.], agent: agent-0, action_space: MultiDiscrete2
Multidiscrete---------action: [array([0., 0., 1., 0., 0., 1., 0.]), array([], dtype=float64)], action[0]: [0. 0. 1. 0. 0. 1. 0.]
movable else---------action: [array([0., 0., 1., 0., 0., 1., 0.]), array([], dtype=float64)], action of agent: [-1.  0.  1.]
movable---------action: [array([], dtype=float64)], actionofagent: [-5.  0.  5.]
communication---------action[0]: []
communication---------action: [], action of agent: []
